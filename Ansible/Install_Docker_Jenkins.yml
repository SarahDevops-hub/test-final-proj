---
- hosts: all
  become: true
  gather_facts: false

  tasks:
    - name: Update apt package index
      apt:
        update_cache: yes

    # Docker Installation
    - name: Install required packages to allow apt over HTTPS
      apt:
        name: apt-transport-https
        state: present
        install_recommends: no

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository to apt sources
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
        update_cache: yes
    
    - name: Install Docker-Compose
      ansible.builtin.get_url:
        url: "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-linux-x86_64"
        dest: "/usr/local/bin/docker-compose"
        mode: "0755"  # Makes it executable

    - name: Add Jenkins user to docker group
      ansible.builtin.user:
        name: jenkins
        groups: docker
        append: yes

    - name: Add current user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    # Jenkins Installation
    - name: Install Java (required by Jenkins)
      apt:
        name: openjdk-17-jre  # Or a later version
        state: present

    - name: Add Jenkins repository key
      apt_key:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        state: present

    - name: Add Jenkins repository to apt sources
      apt_repository:
        repo: deb https://pkg.jenkins.io/debian-stable binary/
        state: present

    - name: Install Jenkins
      apt:
        name: jenkins
        state: present
        update_cache: yes



    # Create Jenkins plugins directory
    - name: Create Jenkins plugins directory
      file:
        path: /var/lib/jenkins/plugins
        state: directory
        owner: jenkins
        group: jenkins
        mode: '0755'

    # Install Jenkins plugins (you can add more plugins as needed)
    - name: Install Jenkins plugins
      get_url:
        url: "https://updates.jenkins.io/download/plugins/{{ item }}/latest/{{ item }}.hpi"
        dest: "/var/lib/jenkins/plugins/{{ item }}.hpi"
        owner: jenkins
        group: jenkins
        mode: '0644'
      loop:
        - "credentials"
        - "workflow-aggregator"
        - "git"
        - "github"
        - "blueocean"
        - "docker-workflow"
        - "pipeline-utility-steps"
        - "ssh-agent"
        - "ws-cleanup"
        - "timestamper"
        - "ansible"

    # Configure Jenkins with basic settings
    - name: Configure Jenkins
      template:
        src: jenkins_config.xml.j2  # You'll need to create this template file
        dest: /var/lib/jenkins/config.xml
        owner: jenkins
        group: jenkins
        mode: '0644'
      notify: Restart Jenkins


    - name: Start Jenkins service
      service:
        name: jenkins
        state: started
        enabled: yes

   

    - name: add user jenkins in docker group then restart jenkins 
      user:
        name: jenkins
        groups: docker
        append: yes
    
    - name: Restart Jenkins service
      service:
        name: jenkins
        state: restarted
        enabled: yes
      
    - name: Enable ufw
      ufw:
        state: enabled
      ignore_errors: yes
      become: true

    - name: Open Jenkins port (8080) in firewall (if ufw is enabled)
      ufw:
        rule: allow
        port: '8080'
        proto: tcp
      ignore_errors: yes
      become: true


    
    - name: Get /var/lib/jenkins/secrets/initialAdminPassword
      command: cat /var/lib/jenkins/secrets/initialAdminPassword
      register: jenkins_password
      changed_when: false

    - name: Print Jenkins initial admin password
      debug:
        msg: "Jenkins initial admin password: {{ jenkins_password.stdout }}"
      when: jenkins_password.stdout != ""

    - name: Print Jenkins URL 
      debug:
        msg: "Jenkins URL: http://{{ ansible_host }}:8080"
      when: jenkins_password.stdout != ""
